#!/bin/sh

genindex() {
echo "<ul>"
recfmt '
<li>
<b>{{Date}}:</b>
<a href="{{File}}">{{Name}}</a>
{{Extra}}
</li>
' < "$1"
echo "</ul>"
}

genrss() {
cat <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>$2</title>
<link>$3</link>
<description>$4</description>
EOF
recfmt '
<item>
<title>{{Name}}</title>
<link>{{File}}</link>
<guid>{{File}}</guid>
<pubDate>{{Date}}</pubDate>
<description><![CDATA[
<a href="{{File}}">{{Name}}</a>
{{Extra}}
]]></description>
</item>
' < "$1"
cat <<EOF
</channel>
</rss>
EOF
}

wraphtml() {
while getopts t:R: arg; do
	case $arg in
		t) template=$OPTARG;;
		R) regex=$OPTARG;;
		\?|*) exit 1;;
	esac
done
shift $(expr $OPTIND - 1)

sed "/${regex:-^\s*<!--WRAPHTML-->$}/r ${1:-/dev/stdin}" "${template:-template.html}"
}

dirindex() {
while getopts s: flag; do
	case $flag in
		s) format=$OPTARG;;
	esac
done
shift "$((OPTIND - 1))"

for dir do
	find "$dir" -type f -printf "${format:-<li><a href=\"%p\">%p</a></li>\n}"
done
}

markdown2html() {
pandoc -f gfm -t html "${1:--}"
}
